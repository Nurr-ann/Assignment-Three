#include <iostream>
#include <random>
#include <iomanip>
#include <string>
using namespace std;
class Board {
protected:
    int n_rows, n_cols;
    char** board;
    int n_moves = 0;
public:
    virtual bool update_board(int x, int y, char symbol) = 0;
    virtual bool is_winner() = 0;
    virtual bool is_draw() = 0;
    virtual void display_board() = 0;
    virtual bool game_is_over() = 0;
};
class X_O_Board : public Board {
private:
    int playerCounts[2] = {0, 0}; // Counts of consecutive X's or O's for each player
public:
    X_O_Board();
    ~X_O_Board();  // Destructor to free memory
    bool update_board(int x, int y, char mark);
    void display_board();
    bool is_winner();
    bool is_draw();
    bool game_is_over();
};
X_O_Board::~X_O_Board() {
    for (int i = 0; i < n_rows; i++) {
        delete[] board[i];
    }
    delete[] board;
}
class Player {
protected:
    string name;
    char symbol;
